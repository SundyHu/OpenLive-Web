{"version":3,"sources":["utils/store.js","utils/snackbar-wrapper.jsx","utils/loading.jsx","utils/container.jsx","utils/use-router.jsx","pages/index/index-card.jsx","rtc-client.js","pages/index/settings-card.jsx","utils/use-devices.jsx","pages/index/card.jsx","pages/index.jsx","pages/meeting/stream-player.jsx","pages/meeting.jsx","utils/use-stream.jsx","App.jsx","serviceWorker.js","utils/theme.js","index.js"],"names":["defaultState","loading","streams","localStream","currentStream","otherStreams","devicesList","config","uid","host","channelName","token","process","resolution","JSON","parse","window","sessionStorage","getItem","err","readDefaultState","microphoneId","cameraId","agoraClient","mode","codec","muteVideo","muteAudio","screen","profile","reducer","state","action","type","payload","client","newCurrentStream","filter","it","getId","newStream","length","newStreams","stream","targetId","forEach","isPlaying","stop","close","Error","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","customSnackbar","minWidth","minHeight","background","boxShadow","borderRadius","justifyContent","padding","SnackbarWrapper","props","classes","mutationCtx","useGlobalMutation","variant","onClose","other","Icon","useEffect","timer","setTimeout","removeTop","clearTimeout","SnackbarContent","className","clsx","aria-describedby","id","IconButton","key","aria-label","color","onClick","CustomizedSnackbar","handleClose","evt","toasts","map","item","index","Snackbar","open","anchorOrigin","vertical","horizontal","useStyles","progress","margin","container","height","width","CircularLoading","CircularProgress","StateContext","createContext","MutationContext","ContainerProvider","children","useReducer","dispatch","rootState","useState","updateToasts","methods","startLoading","stopLoading","updateConfig","params","setClient","clientInstance","setCodec","param","setVideo","setAudio","setScreen","setProfile","toastSuccess","toastInfo","toastError","items","e","idx","setLocalStream","setCurrentStream","setDevicesList","clearAllStream","addLocal","addStream","removeStream","removeStreamById","connectionStateChanged","curState","setItem","stringify","Provider","value","useGlobalState","useContext","RouterContext","React","BrowserRouterHook","routeProps","useRouter","CustomRadio","withStyles","root","checked","readOnly","Box","flex","fontStyle","midItem","marginTop","marginBottom","coverLeft","flexDirection","coverContent","card","maxHeight","input","maxWidth","alignSelf","grid","button","lineHeight","textTransform","radio","paddingRight","IndexCard","routerCtx","stateCtx","handleChange","console","log","to","AgoraRTC","VERSION","href","FormControl","InputLabel","htmlFor","Input","name","onChange","test","target","Button","history","push","pathname","checkSystemRequirements","RTCClient","this","_client","_joined","_localStream","_params","_uid","_eventBus","EventEmitter","_showProfile","_subscribed","_created","data","createClient","callback","indexOf","on","role","setClientRole","Promise","resolve","reject","unpublish","closeStream","rtcStream","createStream","streamID","audio","video","setVideoProfile","init","emit","screenSharingStream","setScreenProfile","publish","subscribe","_tmpStream","_createTmpStream","then","getDevices","devices","setStreamFallbackOption","enableDualStream","streamType","setRemoteVideoStreamType","join","channel","createRTCStream","catch","leave","destroy","menuTitle","textAlign","position","top","menu","line","borderBottom","hr","switchItem","marginLeft","CustomSwitch","switchBase","transform","common","white","border","thumb","track","grey","transition","transitions","create","focusVisible","Switch","focusVisibleClassName","SettingsCard","useMemo","kind","deviceId","label","cameraList","microphoneList","useDevices","Select","inputProps","MenuItem","FormControlLabel","control","coverRight","CardPage","Card","exact","path","component","boxSizing","Index","Container","StreamPlayer","domId","resume","changeResume","autoplay","changeAutoplay","accessDelay","fps","setState","analytics","setInterval","getStats","stats","local","videoSendResolutionWidth","videoReceiveResolutionWidth","videoSendResolutionHeight","videoReceiveResolutionHeight","videoSendFrameRate","videoReceiveFrameRate","clearInterval","lockPlay","useRef","current","play","fit","errState","status","onDoubleClick","stopPropagation","showProfile","showUid","customBtn","backgroundSize","cursor","leftAlign","rightAlign","menuContainer","zIndex","memo","localClient","otherStream","useStream","setMuteVideo","setMuteAudio","URLSearchParams","location","search","roleParams","get","handleClick","unmuteVideo","unmuteAudio","createScreenSharingStream","handleDoubleClick","Tooltip","title","App","Meeting","Boolean","hostname","match","createMuiTheme","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightMedium","overrides","MuiFormControl","MuiInput","underline","ReactDOM","render","ThemeProvider","THEME","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1b543b6.chunk.js","sourcesContent":["const readDefaultState = () => {\r\n  try {\r\n    return JSON.parse(window.sessionStorage.getItem('custom_storage'))\r\n  } catch (err) {\r\n    return {}\r\n  }\r\n}\r\n\r\nconst defaultState = {\r\n  // loading effect\r\n  loading: false,\r\n  // media devices\r\n  streams: [],\r\n  localStream: null,\r\n  currentStream: null,\r\n  otherStreams: [],\r\n  devicesList: [],\r\n  // web sdk params\r\n  config: {\r\n    uid: 0,\r\n    host: true,\r\n    channelName: '',\r\n    token: process.env.REACT_APP_AGORA_APP_TOKEN,\r\n    resolution: '480p',\r\n    ...readDefaultState(),\r\n    microphoneId: '',\r\n    cameraId: ''\r\n  },\r\n  agoraClient: null,\r\n  mode: 'live',\r\n  codec: 'vp8',\r\n  muteVideo: true,\r\n  muteAudio: true,\r\n  screen: false,\r\n  profile: false\r\n  // beauty: false\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'config': {\r\n      return { ...state, config: action.payload }\r\n    }\r\n    case 'client': {\r\n      return { ...state, client: action.payload }\r\n    }\r\n    case 'loading': {\r\n      return { ...state, loading: action.payload }\r\n    }\r\n    case 'codec': {\r\n      return { ...state, codec: action.payload }\r\n    }\r\n    case 'video': {\r\n      return { ...state, muteVideo: action.payload }\r\n    }\r\n    case 'audio': {\r\n      return { ...state, muteAudio: action.payload }\r\n    }\r\n    case 'screen': {\r\n      return { ...state, screen: action.payload }\r\n    }\r\n    case 'devicesList': {\r\n      return { ...state, devicesList: action.payload }\r\n    }\r\n    case 'localStream': {\r\n      return { ...state, localStream: action.payload }\r\n    }\r\n    case 'profile': {\r\n      return { ...state, profile: action.payload }\r\n    }\r\n    case 'currentStream': {\r\n      const { streams } = state\r\n      const newCurrentStream = action.payload\r\n      const otherStreams = streams.filter(\r\n        (it) => it.getId() !== newCurrentStream.getId()\r\n      )\r\n      return { ...state, currentStream: newCurrentStream, otherStreams }\r\n    }\r\n    case 'addStream': {\r\n      const { streams, currentStream } = state\r\n      const newStream = action.payload\r\n      let newCurrentStream = currentStream\r\n      if (!newCurrentStream) {\r\n        newCurrentStream = newStream\r\n      }\r\n      if (streams.length === 4) return { ...state }\r\n      const newStreams = [...streams, newStream]\r\n      const otherStreams = newStreams.filter(\r\n        (it) => it.getId() !== newCurrentStream.getId()\r\n      )\r\n      return {\r\n        ...state,\r\n        streams: newStreams,\r\n        currentStream: newCurrentStream,\r\n        otherStreams\r\n      }\r\n    }\r\n    case 'removeStream': {\r\n      const { streams, currentStream } = state\r\n      const { stream, uid } = action\r\n      const targetId = stream ? stream.getId() : uid\r\n      let newCurrentStream = currentStream\r\n      const newStreams = streams.filter(\r\n        (stream) => stream.getId() !== targetId\r\n      )\r\n      if (currentStream && (targetId === currentStream.getId())) {\r\n        if (newStreams.length === 0) {\r\n          newCurrentStream = null\r\n        } else {\r\n          newCurrentStream = newStreams[0]\r\n        }\r\n      }\r\n      const otherStreams = newCurrentStream\r\n        ? newStreams.filter((it) => it.getId() !== newCurrentStream.getId())\r\n        : []\r\n      return {\r\n        ...state,\r\n        streams: newStreams,\r\n        currentStream: newCurrentStream,\r\n        otherStreams\r\n      }\r\n    }\r\n    case 'clearAllStream': {\r\n      // const {streams, localStream, currentStream, beauty} = state;\r\n      const { streams, localStream, currentStream } = state\r\n      streams.forEach((stream) => {\r\n        if (stream.isPlaying()) {\r\n          stream.stop()\r\n        }\r\n        // stream.close();\r\n      })\r\n\r\n      if (localStream) {\r\n        localStream.isPlaying() && localStream.stop()\r\n        localStream.close()\r\n      }\r\n      if (currentStream) {\r\n        currentStream.isPlaying() && currentStream.stop()\r\n        currentStream.close()\r\n      }\r\n      return { ...state, currentStream: null, localStream: null, streams: [] }\r\n    }\r\n    // case 'enableBeauty': {\r\n    //   return {\r\n    //     ...state,\r\n    //     beauty: action.enable\r\n    //   }\r\n    // }\r\n    default:\r\n      throw new Error('mutation type not defined')\r\n  }\r\n}\r\n\r\nexport { reducer, defaultState }\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport clsx from 'clsx'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { amber, green } from '@material-ui/core/colors'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\r\nimport WarningIcon from '@material-ui/icons/Warning'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useGlobalMutation } from '../utils/container'\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon\r\n}\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  success: {\r\n    backgroundColor: green[600]\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700]\r\n  },\r\n  icon: {\r\n    fontSize: 20\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  customSnackbar: {\r\n    minWidth: '180px !important',\r\n    minHeight: '40px !important',\r\n    background: 'rgba(0,0,0,0.7)',\r\n    boxShadow: '0px 2px 4px 0px rgba(42,62,84,0.24)',\r\n    borderRadius: '30px',\r\n    justifyContent: 'center',\r\n    padding: '0 11px'\r\n  }\r\n}))\r\n\r\nSnackbarWrapper.propTypes = {\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired\r\n}\r\n\r\nfunction SnackbarWrapper (props) {\r\n  const classes = useStyles1()\r\n  const mutationCtx = useGlobalMutation()\r\n  const { message, onClose, variant, ...other } = props\r\n  const Icon = variantIcon[variant]\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      mutationCtx.removeTop()\r\n    }, 1000)\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  }, [mutationCtx])\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], classes.customSnackbar)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          {variant === 'error' ? (\r\n            <i className=\"error-icon\" />\r\n          ) : (\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          )}\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"close\"\r\n          color=\"inherit\"\r\n          onClick={() => {\r\n            mutationCtx.removeTop()\r\n          }}\r\n        >\r\n          <CloseIcon className={clsx(classes.icon)} />\r\n        </IconButton>\r\n      ]}\r\n      {...other}\r\n    />\r\n  )\r\n}\r\n\r\nexport default function CustomizedSnackbar (props) {\r\n  const handleClose = (evt) => {}\r\n  return (\r\n    <>\r\n      {props.toasts.map((item, index) => (\r\n        <Snackbar\r\n          key={index}\r\n          open={true}\r\n          anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center'\r\n          }}\r\n          // onClose={handleClose}\r\n        >\r\n          <SnackbarWrapper\r\n            onClose={handleClose}\r\n            variant={item.variant}\r\n            message={`${item.message}`}\r\n          />\r\n        </Snackbar>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n    color: '#44A2FC'\r\n  },\r\n  container: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    background: '#666666'\r\n  }\r\n}))\r\n\r\nexport default function CircularLoading () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <CircularProgress className={classes.progress} />\r\n    </div>\r\n  )\r\n}\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useReducer,\r\n  useState,\r\n  useEffect\r\n} from 'react'\r\nimport { reducer, defaultState } from './store'\r\nimport CustomizedSnackbar from '../utils/snackbar-wrapper'\r\nimport Loading from '../utils/loading'\r\n\r\nconst StateContext = createContext({})\r\nconst MutationContext = createContext({})\r\n\r\nexport const ContainerProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, defaultState)\r\n\r\n  window.rootState = state\r\n\r\n  const [toasts, updateToasts] = useState([])\r\n\r\n  const methods = {\r\n    startLoading () {\r\n      dispatch({ type: 'loading', payload: true })\r\n    },\r\n    stopLoading () {\r\n      dispatch({ type: 'loading', payload: false })\r\n    },\r\n    updateConfig (params) {\r\n      dispatch({ type: 'config', payload: { ...state.config, ...params } })\r\n    },\r\n    setClient (clientInstance) {\r\n      dispatch({ type: 'client', payload: clientInstance })\r\n    },\r\n    setCodec (param) {\r\n      dispatch({ type: 'codec', payload: param })\r\n    },\r\n    setVideo (param) {\r\n      dispatch({ type: 'video', payload: param })\r\n    },\r\n    setAudio (param) {\r\n      dispatch({ type: 'audio', payload: param })\r\n    },\r\n    setScreen (param) {\r\n      dispatch({ type: 'screen', payload: param })\r\n    },\r\n    setProfile (param) {\r\n      dispatch({ type: 'profile', payload: param })\r\n    },\r\n    toastSuccess (message) {\r\n      updateToasts([\r\n        ...toasts,\r\n        {\r\n          variant: 'success',\r\n          message\r\n        }\r\n      ])\r\n    },\r\n    toastInfo (message) {\r\n      updateToasts([\r\n        ...toasts,\r\n        {\r\n          variant: 'info',\r\n          message\r\n        }\r\n      ])\r\n    },\r\n    toastError (message) {\r\n      updateToasts([\r\n        ...toasts,\r\n        {\r\n          variant: 'error',\r\n          message\r\n        }\r\n      ])\r\n    },\r\n    removeTop () {\r\n      const items = toasts.filter((e, idx) => idx > 0)\r\n      updateToasts([...items])\r\n    },\r\n    setLocalStream (param) {\r\n      dispatch({ type: 'localStream', payload: param })\r\n    },\r\n    setCurrentStream (param) {\r\n      dispatch({ type: 'currentStream', payload: param })\r\n    },\r\n    setDevicesList (param) {\r\n      dispatch({ type: 'devicesList', payload: param })\r\n    },\r\n    clearAllStream () {\r\n      dispatch({ type: 'clearAllStream' })\r\n    },\r\n    addLocal (evt) {\r\n      const { stream } = evt\r\n      methods.setLocalStream(stream)\r\n      methods.setCurrentStream(stream)\r\n    },\r\n    addStream (evt) {\r\n      const { stream } = evt\r\n      dispatch({ type: 'addStream', payload: stream })\r\n    },\r\n    removeStream (evt) {\r\n      const { stream } = evt\r\n      dispatch({ type: 'removeStream', stream: stream })\r\n    },\r\n    removeStreamById (evt) {\r\n      const { uid } = evt\r\n      dispatch({ type: 'removeStream', uid: uid })\r\n    },\r\n    connectionStateChanged (evt) {\r\n      methods.toastInfo(`${evt.curState}`)\r\n    },\r\n    // enableBeauty(enable) {\r\n    //   dispatch({type: 'enableBeauty', enable});\r\n    // }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.sessionStorage.setItem(\r\n      'custom_storage',\r\n      JSON.stringify({\r\n        uid: state.config.uid,\r\n        host: state.config.host,\r\n        channelName: state.config.channelName,\r\n        token: state.config.token,\r\n        resolution: state.config.resolution\r\n      })\r\n    )\r\n  }, [state])\r\n\r\n  return (\r\n    <StateContext.Provider value={state}>\r\n      <MutationContext.Provider value={methods}>\r\n        <CustomizedSnackbar toasts={toasts} />\r\n        {state.loading ? <Loading /> : null}\r\n        {children}\r\n      </MutationContext.Provider>\r\n    </StateContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useGlobalState () {\r\n  return useContext(StateContext)\r\n}\r\n\r\nexport function useGlobalMutation () {\r\n  return useContext(MutationContext)\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nexport const RouterContext = React.createContext({})\r\n\r\nexport const BrowserRouterHook = ({ children }) => (\r\n  <Router>\r\n    <Switch>\r\n      <Route>\r\n        {(routeProps) => (\r\n          <RouterContext.Provider value={routeProps}>\r\n            {children}\r\n          </RouterContext.Provider>\r\n        )}\r\n      </Route>\r\n    </Switch>\r\n  </Router>\r\n)\r\n\r\nexport default function useRouter () {\r\n  return useContext(RouterContext)\r\n}\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport { useGlobalState, useGlobalMutation } from '../../utils/container'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Input from '@material-ui/core/Input'\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button'\r\nimport useRouter from '../../utils/use-router'\r\nimport { Link } from 'react-router-dom'\r\nimport AgoraRTC from 'agora-rtc-sdk'\r\n\r\nconst CustomRadio = withStyles({\r\n  root: {\r\n    color: '#999999',\r\n    '&$checked': {\r\n      color: '#44A2FC'\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: 'inherit'\r\n    }\r\n  }\r\n})(({ children, ...props }) => {\r\n  return (\r\n    <div className={`role-item ${props.checked ? 'active' : 'inactive'}`} onClick={(evt) => {\r\n      props.onClick(props)\r\n    }}>\r\n      <div className={`icon-${props.value}`}></div>\r\n      <div className={`radio-row ${props.value}`}>\r\n        <div className=\"custom-radio\">\r\n          <input\r\n            readOnly\r\n            type=\"radio\"\r\n            value={props.value}\r\n            checked={props.checked}\r\n          />\r\n          <div className=\"checkmark\"></div>\r\n        </div>\r\n        <Box\r\n          flex=\"1\"\r\n          className={`role-name ${props.checked ? 'active' : 'inactive'}`}\r\n        >\r\n          {props.value}\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fontStyle: {\r\n    color: '#9ee2ff'\r\n  },\r\n  midItem: {\r\n    marginTop: '1rem',\r\n    marginBottom: '6rem'\r\n  },\r\n  item: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  coverLeft: {\r\n    background: 'linear-gradient(to bottom, #307AFF, 50%, #46cdff)',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  coverContent: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    color: '#fff'\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    minWidth: 700,\r\n    minHeight: 500,\r\n    maxHeight: 500,\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 6px 18px 0px rgba(0,0,0,0.2)'\r\n  },\r\n  input: {\r\n    maxWidth: '250px',\r\n    minWidth: '250px',\r\n    alignSelf: 'center'\r\n  },\r\n  grid: {\r\n    margin: '0 !important'\r\n  },\r\n  button: {\r\n    lineHeight: '21px',\r\n    color: 'rgba(255,255,255,1)',\r\n    fontSize: '17px',\r\n    textTransform: 'none',\r\n    height: '44px',\r\n    width: '260px',\r\n    '&:hover': {\r\n      backgroundColor: '#82C2FF'\r\n    },\r\n    margin: theme.spacing(1),\r\n    marginTop: '33px',\r\n    backgroundColor: '#44a2fc',\r\n    borderRadius: '30px'\r\n  },\r\n  radio: {\r\n    padding: '0',\r\n    fontSize: '14px',\r\n    // display: 'flex',\r\n    alignItems: 'center',\r\n    paddingRight: '5px'\r\n  }\r\n}))\r\n\r\nexport default function IndexCard () {\r\n  const classes = useStyles()\r\n\r\n  const routerCtx = useRouter()\r\n  const stateCtx = useGlobalState()\r\n  const mutationCtx = useGlobalMutation()\r\n\r\n  const handleClick = () => {\r\n    if (!stateCtx.config.channelName) {\r\n      mutationCtx.toastError('You need enter the topic')\r\n      return\r\n    }\r\n\r\n    mutationCtx.startLoading()\r\n    routerCtx.history.push({\r\n      pathname: `/meeting/${stateCtx.config.channelName}`\r\n    })\r\n  }\r\n\r\n  const handleChange = (evt) => {\r\n    const { value, checked } = evt\r\n    console.log('value', evt)\r\n    mutationCtx.updateConfig({\r\n      host: value === 'host'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      marginTop=\"114px\"\r\n      flex=\"1\"\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"flex-start\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Link to=\"/setting\" className=\"setting-btn\" />\r\n      <span className=\"version\">Web SDK Version: {AgoraRTC.VERSION}</span>\r\n      <a\r\n        href=\"https://github.com/AgoraIO/Basic-Video-Broadcasting/tree/master/OpenLive-Web\"\r\n        className=\"github\"\r\n      ></a>\r\n      <div className=\"role-container\">\r\n        <CustomRadio\r\n          className={classes.radio}\r\n          value=\"host\"\r\n          checked={stateCtx.config.host}\r\n          onClick={handleChange}\r\n        ></CustomRadio>\r\n        <CustomRadio\r\n          className={classes.radio}\r\n          value=\"audience\"\r\n          checked={!stateCtx.config.host}\r\n          onClick={handleChange}\r\n        ></CustomRadio>\r\n      </div>\r\n      <Box\r\n        marginTop=\"92\"\r\n        flex=\"1\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        flexDirection=\"column\"\r\n      >\r\n        <FormControl className={clsx(classes.input, classes.grid)}>\r\n          <InputLabel htmlFor=\"channelName\">Pick a topic to chat</InputLabel>\r\n          <Input\r\n            id=\"channelName\"\r\n            name=\"channelName\"\r\n            value={stateCtx.config.channelName}\r\n            onChange={(evt) => {\r\n              const PATTERN = /^[a-zA-Z0-9!#$%&()+\\-:;<=.>?@[\\]^_{}|~,\\s]{1,64}$/\r\n              const value = PATTERN.test(evt.target.value)\r\n              if (value && evt.target.value.length < 64) {\r\n                mutationCtx.updateConfig({ channelName: evt.target.value })\r\n              } else {\r\n                mutationCtx.updateConfig({ channelName: '' })\r\n              }\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl className={classes.grid}>\r\n          <Button\r\n            onClick={handleClick}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n          >\r\n            Start Live Broadcast\r\n          </Button>\r\n        </FormControl>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import AgoraRTC from 'agora-rtc-sdk'\r\nimport EventEmitter from 'events'\r\nconst appID = process.env.REACT_APP_AGORA_APP_ID\r\nconsole.log(\r\n  'agora sdk version: ' +\r\n    AgoraRTC.VERSION +\r\n    ' compatible: ' +\r\n    AgoraRTC.checkSystemRequirements()\r\n)\r\nexport default class RTCClient {\r\n  constructor () {\r\n    this._client = null\r\n    this._joined = false\r\n    this._localStream = null\r\n    // this._enableBeauty = false;\r\n    this._params = {}\r\n    this._uid = 0\r\n    this._eventBus = new EventEmitter()\r\n    this._showProfile = false\r\n    this._subscribed = false\r\n    this._created = false\r\n  }\r\n\r\n  createClient (data) {\r\n    this._client = AgoraRTC.createClient({\r\n      mode: data.mode,\r\n      codec: data.codec\r\n    })\r\n    return this._client\r\n  }\r\n\r\n  closeStream () {\r\n    if (this._localStream.isPlaying()) {\r\n      this._localStream.stop()\r\n    }\r\n    this._localStream.close()\r\n  }\r\n\r\n  destroy () {\r\n    this._created = false\r\n    this._client = null\r\n  }\r\n\r\n  on (evt, callback) {\r\n    const customEvents = ['localStream-added', 'screenShare-canceled']\r\n\r\n    if (customEvents.indexOf(evt) !== -1) {\r\n      this._eventBus.on(evt, callback)\r\n      return\r\n    }\r\n\r\n    this._client.on(evt, callback)\r\n  }\r\n\r\n  setClientRole (role) {\r\n    this._client.setClientRole(role)\r\n  }\r\n\r\n  createRTCStream (data) {\r\n    return new Promise((resolve, reject) => {\r\n      this._uid = this._localStream ? this._localStream.getId() : data.uid\r\n      if (this._localStream) {\r\n        this.unpublish()\r\n        this.closeStream()\r\n      }\r\n      // create rtc stream\r\n      const rtcStream = AgoraRTC.createStream({\r\n        streamID: this._uid,\r\n        audio: true,\r\n        video: true,\r\n        screen: false,\r\n        microphoneId: data.microphoneId,\r\n        cameraId: data.cameraId\r\n      })\r\n\r\n      if (data.resolution && data.resolution !== 'default') {\r\n        rtcStream.setVideoProfile(data.resolution)\r\n      }\r\n\r\n      // init local stream\r\n      rtcStream.init(\r\n        () => {\r\n          this._localStream = rtcStream\r\n          this._eventBus.emit('localStream-added', {\r\n            stream: this._localStream\r\n          })\r\n          if (data.muteVideo === false) {\r\n            this._localStream.muteVideo()\r\n          }\r\n          if (data.muteAudio === false) {\r\n            this._localStream.muteAudio()\r\n          }\r\n          // if (data.beauty === true) {\r\n          //   this._localStream.setBeautyEffectOptions(true, {\r\n          //     lighteningContrastLevel: 1,\r\n          //     lighteningLevel: 0.7,\r\n          //     smoothnessLevel: 0.5,\r\n          //     rednessLevel: 0.1\r\n          //   })\r\n          //   this._enableBeauty = true;\r\n          // }\r\n          resolve()\r\n        },\r\n        (err) => {\r\n          reject(err)\r\n          // Toast.error(\"stream init failed, please open console see more detail\");\r\n          console.error('init local stream failed ', err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  createScreenSharingStream (data) {\r\n    return new Promise((resolve, reject) => {\r\n      // create screen sharing stream\r\n      this._uid = this._localStream ? this._localStream.getId() : data.uid\r\n      if (this._localStream) {\r\n        this._uid = this._localStream.getId()\r\n        this.unpublish()\r\n      }\r\n      const screenSharingStream = AgoraRTC.createStream({\r\n        streamID: this._uid,\r\n        audio: true,\r\n        video: false,\r\n        screen: true,\r\n        microphoneId: data.microphoneId,\r\n        cameraId: data.cameraId\r\n      })\r\n\r\n      if (data.resolution && data.resolution !== 'default') {\r\n        screenSharingStream.setScreenProfile(`${data.resolution}_1`)\r\n      }\r\n\r\n      screenSharingStream.on('stopScreenSharing', (evt) => {\r\n        this._eventBus.emit('stopScreenSharing', evt)\r\n        this.closeStream()\r\n        this.unpublish()\r\n      })\r\n\r\n      // init local stream\r\n      screenSharingStream.init(\r\n        () => {\r\n          this.closeStream()\r\n          this._localStream = screenSharingStream\r\n\r\n          // run callback\r\n          this._eventBus.emit('localStream-added', {\r\n            stream: this._localStream\r\n          })\r\n          resolve()\r\n        },\r\n        (err) => {\r\n          this.publish()\r\n          reject(err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  subscribe (stream, callback) {\r\n    this._client.subscribe(stream, callback)\r\n  }\r\n\r\n  _createTmpStream () {\r\n    this._uid = 0\r\n    return new Promise((resolve, reject) => {\r\n      if (this._localStream) {\r\n        this._localStream.close()\r\n      }\r\n      // create rtc stream\r\n      const _tmpStream = AgoraRTC.createStream({\r\n        streamID: this._uid,\r\n        audio: true,\r\n        video: true,\r\n        screen: false\r\n      })\r\n\r\n      // init local stream\r\n      _tmpStream.init(\r\n        () => {\r\n          this._localStream = _tmpStream\r\n          resolve()\r\n        },\r\n        (err) => {\r\n          reject(err)\r\n          // Toast.error(\"stream init failed, please open console see more detail\");\r\n          console.error('init local stream failed ', err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  getDevices () {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this._client) {\r\n        this.createClient({ codec: 'vp8', mode: 'live' })\r\n      }\r\n      this._createTmpStream().then(() => {\r\n        AgoraRTC.getDevices((devices) => {\r\n          this._localStream.close()\r\n          resolve(devices)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  setStreamFallbackOption (stream, type) {\r\n    this._client.setStreamFallbackOption(stream, type)\r\n  }\r\n\r\n  enableDualStream () {\r\n    return new Promise((resolve, reject) => {\r\n      this._client.enableDualStream(resolve, reject)\r\n    })\r\n  }\r\n\r\n  setRemoteVideoStreamType (stream, streamType) {\r\n    this._client.setRemoteVideoStreamType(stream, streamType)\r\n  }\r\n\r\n  join (data) {\r\n    this._joined = 'pending'\r\n    return new Promise((resolve, reject) => {\r\n      /**\r\n       * A class defining the properties of the config parameter in the createClient method.\r\n       * Note:\r\n       *    Ensure that you do not leave mode and codec as empty.\r\n       *    Ensure that you set these properties before calling Client.join.\r\n       *  You could find more detail here. https://docs.agora.io/en/Video/API%20Reference/web/interfaces/agorartc.clientconfig.html\r\n       **/\r\n\r\n      this._params = data\r\n\r\n      // handle AgoraRTC client event\r\n      // this.handleEvents();\r\n\r\n      // init client\r\n      this._client.init(\r\n        appID,\r\n        () => {\r\n          /**\r\n           * Joins an AgoraRTC Channel\r\n           * This method joins an AgoraRTC channel.\r\n           * Parameters\r\n           * tokenOrKey: string | null\r\n           *    Low security requirements: Pass null as the parameter value.\r\n           *    High security requirements: Pass the string of the Token or Channel Key as the parameter value. See Use Security Keys for details.\r\n           *  channel: string\r\n           *    A string that provides a unique channel name for the Agora session. The length must be within 64 bytes. Supported character scopes:\r\n           *    26 lowercase English letters a-z\r\n           *    26 uppercase English letters A-Z\r\n           *    10 numbers 0-9\r\n           *    Space\r\n           *    \"!\", \"#\", \"$\", \"%\", \"&\", \"(\", \")\", \"+\", \"-\", \":\", \";\", \"<\", \"=\", \".\", \">\", \"?\", \"@\", \"[\", \"]\", \"^\", \"_\", \"{\", \"}\", \"|\", \"~\", \",\"\r\n           *  uid: number | null\r\n           *    The user ID, an integer. Ensure this ID is unique. If you set the uid to null, the server assigns one and returns it in the onSuccess callback.\r\n           *   Note:\r\n           *      All users in the same channel should have the same type (number) of uid.\r\n           *      If you use a number as the user ID, it should be a 32-bit unsigned integer with a value ranging from 0 to (232-1).\r\n           **/\r\n          this._client.join(\r\n            data.token ? data.token : null,\r\n            data.channel,\r\n            data.uid ? +data.uid : null,\r\n            (uid) => {\r\n              this._uid = uid\r\n              // Toast.notice(\"join channel: \" + data.channel + \" success, uid: \" + uid);\r\n              console.log(\r\n                'join channel: ' + data.channel + ' success, uid: ' + uid\r\n              )\r\n              this._joined = true\r\n\r\n              data.uid = uid\r\n\r\n              if (data.host) {\r\n                this.createRTCStream(data)\r\n                  .then(() => {\r\n                    this.enableDualStream()\r\n                      .then(() => {\r\n                        this.setRemoteVideoStreamType(this._localStream, 0)\r\n                        resolve(data.uid)\r\n                      })\r\n                      .catch((err) => {\r\n                        reject(err)\r\n                      })\r\n                  })\r\n                  .catch((err) => {\r\n                    reject(err)\r\n                  })\r\n              } else {\r\n                resolve()\r\n              }\r\n            },\r\n            (err) => {\r\n              this._joined = false\r\n              reject(err)\r\n              console.error('client join failed', err)\r\n            }\r\n          )\r\n        },\r\n        (err) => {\r\n          this._joined = false\r\n          reject(err)\r\n          console.error(err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  publish () {\r\n    // publish localStream\r\n    this._client.publish(this._localStream, (err) => {\r\n      console.error(err)\r\n    })\r\n  }\r\n\r\n  unpublish () {\r\n    if (!this._client) {\r\n      return\r\n    }\r\n    this._client.unpublish(this._localStream, (err) => {\r\n      console.error(err)\r\n    })\r\n  }\r\n\r\n  leave () {\r\n    return new Promise((resolve) => {\r\n      if (!this._client) return resolve()\r\n      // leave channel\r\n      this._client.leave(\r\n        () => {\r\n          this._joined = false\r\n          this.destroy()\r\n          // if (this._localStream && this._enableBeauty) {\r\n          //   this._localStream.setBeautyEffectOptions(false);\r\n          // }\r\n          resolve()\r\n        },\r\n        (err) => {\r\n          console.log('channel leave failed')\r\n          console.error(err)\r\n        }\r\n      )\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useGlobalState, useGlobalMutation } from '../../utils/container'\r\nimport useDevices from '../../utils/use-devices'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport Box from '@material-ui/core/Box'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport { Link } from 'react-router-dom'\r\n\r\nSettingsCard.propTypes = {\r\n  name: PropTypes.string,\r\n  resolution: PropTypes.string,\r\n  cameraDevice: PropTypes.string,\r\n  microphoneDevice: PropTypes.string,\r\n  video: PropTypes.bool,\r\n  audio: PropTypes.bool\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuTitle: {\r\n    color: '#333333',\r\n    textAlign: 'center',\r\n    fontSize: 'h6.fontSize',\r\n    position: 'relative',\r\n    top: '7px'\r\n  },\r\n  marginTop: {\r\n    marginTop: '0 !important'\r\n  },\r\n  menu: {\r\n    margin: '0.25rem 0',\r\n    position: 'relative',\r\n    height: '39px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  line: {\r\n    marginTop: '0.2rem',\r\n    marginBottom: '0.5rem',\r\n    borderBottom: '1px solid #EAEAEA'\r\n  },\r\n  hr: {\r\n    borderBottom: '1px solid #EAEAEA'\r\n  },\r\n  switchItem: {\r\n    flexDirection: 'row-reverse !important',\r\n    marginLeft: '0 !important',\r\n    marginRight: '0 !important',\r\n    justifyContent: 'space-between'\r\n  }\r\n}))\r\n\r\nconst CustomSwitch = withStyles((theme) => ({\r\n  root: {\r\n    width: 42,\r\n    height: 26,\r\n    padding: 2,\r\n    margin: theme.spacing(1)\r\n  },\r\n  switchBase: {\r\n    padding: 1,\r\n    '&$checked': {\r\n      transform: 'translateX(16px)',\r\n      color: theme.palette.common.white,\r\n      '& + $track': {\r\n        backgroundColor: '#44A2FC',\r\n        opacity: 1,\r\n        border: 'none'\r\n      }\r\n    },\r\n    '&$focusVisible $thumb': {\r\n      color: '#52d869',\r\n      border: '6px solid #fff'\r\n    }\r\n  },\r\n  thumb: {\r\n    width: 24,\r\n    height: 24\r\n  },\r\n  track: {\r\n    borderRadius: 26 / 2,\r\n    border: `1px solid ${theme.palette.grey[400]}`,\r\n    backgroundColor: theme.palette.grey[50],\r\n    opacity: 1,\r\n    transition: theme.transitions.create(['background-color', 'border'])\r\n  },\r\n  checked: {},\r\n  focusVisible: {}\r\n}))(({ classes, ...props }) => {\r\n  return (\r\n    <Switch\r\n      focusVisibleClassName={classes.focusVisible}\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\n\r\nexport default function SettingsCard () {\r\n  const classes = useStyles()\r\n\r\n  const stateCtx = useGlobalState()\r\n\r\n  const mutationCtx = useGlobalMutation()\r\n\r\n  const [cameraList, microphoneList] = useDevices()\r\n\r\n  return (\r\n    <Box flex=\"1\" display=\"flex\" flexDirection=\"column\">\r\n      <Link to=\"/\" className=\"back-btn\" />\r\n      <Box\r\n        display=\"flex\"\r\n        flex=\"1\"\r\n        flexDirection=\"column\"\r\n        padding=\"0 1rem\"\r\n        justifyContent=\"flex-start\"\r\n      >\r\n        <FormControl className={classes.menu}>\r\n          <span className={classes.menuTitle}>Setting</span>\r\n        </FormControl>\r\n        <div className={classes.line}></div>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"resolution\">Resolution</InputLabel>\r\n          <Select\r\n            value={stateCtx.config.resolution}\r\n            onChange={(evt) => {\r\n              mutationCtx.updateConfig({\r\n                resolution: evt.target.value\r\n              })\r\n            }}\r\n            inputProps={{\r\n              name: 'resolution',\r\n              id: 'resolution'\r\n            }}\r\n          >\r\n            <MenuItem value={'480p'}>480p</MenuItem>\r\n            <MenuItem value={'720p'}>720p</MenuItem>\r\n            <MenuItem value={'1080p'}>1080p</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"codec\">Video Codec</InputLabel>\r\n          <Select\r\n            value={stateCtx.codec}\r\n            onChange={(evt) => {\r\n              mutationCtx.setCodec(evt.target.value)\r\n            }}\r\n            inputProps={{\r\n              name: 'codec',\r\n              id: 'codec'\r\n            }}\r\n          >\r\n            <MenuItem value={'h264'}>h264</MenuItem>\r\n            <MenuItem value={'vp8'}>vp8</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"camera\">Camera</InputLabel>\r\n          <Select\r\n            value={stateCtx.config.cameraId}\r\n            onChange={(evt) => {\r\n              mutationCtx.updateConfig({\r\n                cameraId: evt.target.value\r\n              })\r\n            }}\r\n            inputProps={{\r\n              name: 'camera',\r\n              id: 'camera'\r\n            }}\r\n          >\r\n            {cameraList.map((item, key) => (\r\n              <MenuItem key={key} value={item.value}>\r\n                {item.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"Microphone\">Microphone</InputLabel>\r\n          <Select\r\n            value={stateCtx.config.microphoneId}\r\n            onChange={(evt) => {\r\n              mutationCtx.updateConfig({\r\n                microphoneId: evt.target.value\r\n              })\r\n            }}\r\n            inputProps={{\r\n              name: 'microphone',\r\n              id: 'microphone'\r\n            }}\r\n          >\r\n            {microphoneList.map((item, key) => (\r\n              <MenuItem key={key} value={item.value}>\r\n                {item.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormControlLabel\r\n            control={\r\n              <CustomSwitch\r\n                checked={stateCtx.muteVideo}\r\n                onChange={() => {\r\n                  mutationCtx.setVideo(!stateCtx.muteVideo)\r\n                }}\r\n                value={stateCtx.muteVideo}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            className={classes.switchItem}\r\n            label=\"Video\"\r\n          />\r\n          <div className={classes.hr}></div>\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormControlLabel\r\n            control={\r\n              <CustomSwitch\r\n                checked={stateCtx.muteAudio}\r\n                onChange={() => {\r\n                  mutationCtx.setAudio(!stateCtx.muteAudio)\r\n                }}\r\n                value={stateCtx.muteAudio}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            className={classes.switchItem}\r\n            label=\"Audio\"\r\n          />\r\n          <div className={classes.hr}></div>\r\n        </FormControl>\r\n        <FormControl>\r\n          <FormControlLabel\r\n            control={\r\n              <CustomSwitch\r\n                checked={stateCtx.profile}\r\n                onChange={() => {\r\n                  mutationCtx.setProfile(!stateCtx.profile)\r\n                }}\r\n                value={stateCtx.profile}\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            className={classes.switchItem}\r\n            label=\"Profile\"\r\n          />\r\n          <div className={classes.hr}></div>\r\n        </FormControl>\r\n        {/* <FormControl>\r\n        <FormControlLabel\r\n          control={\r\n            <CustomSwitch\r\n              checked={stateCtx.beauty}\r\n              onChange={() => {\r\n                mutationCtx.enableBeauty(!stateCtx.beauty)\r\n              }}\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          className={classes.switchItem}\r\n          label=\"Beauty\"\r\n        />\r\n        <div className={classes.hr}></div>\r\n      </FormControl> */}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport { useGlobalState, useGlobalMutation } from '../utils/container'\r\nimport RTCClient from '../rtc-client'\r\n\r\nexport default function useDevices () {\r\n  const stateCtx = useGlobalState()\r\n  const mutationCtx = useGlobalMutation()\r\n\r\n  const client = useMemo(() => {\r\n    const _rtcClient = new RTCClient()\r\n    return _rtcClient\r\n  }, [])\r\n\r\n  const [cameraList, microphoneList] = useMemo(() => {\r\n    return [\r\n      stateCtx.devicesList\r\n        .filter((item) => item.kind === 'videoinput')\r\n        .map((item, idx) => ({\r\n          value: item.deviceId,\r\n          label: item.label ? item.label : `Video Input ${idx}`\r\n        })),\r\n      stateCtx.devicesList\r\n        .filter((item) => item.kind === 'audioinput')\r\n        .map((item, idx) => ({\r\n          value: item.deviceId,\r\n          label: item.label ? item.label : `Audio Input ${idx}`\r\n        }))\r\n    ]\r\n  }, [stateCtx.devicesList])\r\n\r\n  useEffect(() => {\r\n    if (cameraList.length > 0 || microphoneList.length > 0) return\r\n    client.getDevices().then((devices) => {\r\n      mutationCtx.setDevicesList(devices)\r\n    })\r\n    return () => {\r\n      client.destroy()\r\n    }\r\n  }, [microphoneList, mutationCtx, cameraList, client])\r\n\r\n  useEffect(() => {\r\n    if (\r\n      cameraList[0] &&\r\n      microphoneList[0] &&\r\n      (!stateCtx.config.cameraId || !stateCtx.config.microphoneId)\r\n    ) {\r\n      mutationCtx.updateConfig({\r\n        cameraId: cameraList[0].value,\r\n        microphoneId: microphoneList[0].value\r\n      })\r\n      mutationCtx.stopLoading()\r\n    }\r\n  }, [\r\n    mutationCtx,\r\n    stateCtx.devicesList,\r\n    stateCtx.config,\r\n    cameraList,\r\n    microphoneList\r\n  ])\r\n\r\n  return [cameraList, microphoneList]\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\nimport Card from '@material-ui/core/Card'\r\nimport IndexCard from './index-card'\r\nimport SettingsCard from './settings-card'\r\nconst useStyles = makeStyles(theme => ({\r\n  fontStyle: {\r\n    color: '#9ee2ff'\r\n  },\r\n  midItem: {\r\n    marginTop: '1rem',\r\n    marginBottom: '6rem'\r\n  },\r\n  item: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  coverLeft: {\r\n    background: 'linear-gradient(to bottom, #307AFF, 50%, #46cdff)',\r\n    alignItems: 'center',\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  coverContent: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    color: '#fff',\r\n    position: 'relative'\r\n  },\r\n  coverRight: {\r\n    position: 'relative',\r\n    flex: 1,\r\n    display: 'flex'\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    minWidth: 700,\r\n    minHeight: 500,\r\n    maxHeight: 500,\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 6px 18px 0px rgba(0,0,0,0.2)'\r\n  },\r\n  input: {\r\n    maxWidth: '250px',\r\n    minWidth: '250px',\r\n    alignSelf: 'center'\r\n  },\r\n  grid: {\r\n    margin: '0 !important'\r\n  },\r\n  button: {\r\n    height: '44px',\r\n    width: '260px',\r\n    '&:hover': {\r\n      backgroundColor: '#307AFF'\r\n    },\r\n    margin: theme.spacing(1),\r\n    marginTop: '33px',\r\n    backgroundColor: '#44a2fc',\r\n    borderRadius: '30px'\r\n  }\r\n}))\r\n\r\nexport default function CardPage () {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n      <Card className={classes.card}>\r\n        <Box display=\"flex\" flex=\"1\">\r\n          <div className={classes.coverRight}>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={IndexCard}></Route>\r\n              <Route path=\"/setting\" component={SettingsCard}></Route>\r\n            </Switch>\r\n          </div>\r\n        </Box>\r\n      </Card>\r\n    </Box>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useGlobalState, useGlobalMutation } from '../utils/container'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Container } from '@material-ui/core'\r\nimport IndexCard from './index/card'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    height: '100%',\r\n    width: '100%',\r\n    minWidth: 800,\r\n    minHeight: 600,\r\n    boxSizing: 'content-box',\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}))\r\n\r\nconst Index = () => {\r\n  const stateCtx = useGlobalState()\r\n  const mutationCtx = useGlobalMutation()\r\n  const classes = useStyles()\r\n\r\n  useEffect(() => {\r\n    if (stateCtx.loading === true) {\r\n      mutationCtx.stopLoading()\r\n    }\r\n  }, [stateCtx.loading, mutationCtx])\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className={classes.container}>\r\n      <IndexCard />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nStreamPlayer.propTypes = {\r\n  stream: PropTypes.object\r\n}\r\n\r\nexport default function StreamPlayer (props) {\r\n  const { stream, domId, uid } = props\r\n\r\n  const [resume, changeResume] = useState(false)\r\n\r\n  const [autoplay, changeAutoplay] = useState(false)\r\n\r\n  const handleClick = () => {\r\n    if (autoplay && !resume) {\r\n      stream.resume()\r\n      changeResume(true)\r\n    }\r\n  }\r\n\r\n  const handleDoubleClick = (evt) => {\r\n    evt.stopPropagation()\r\n    props.onDoubleClick(stream)\r\n  }\r\n\r\n  const [state, setState] = useState({\r\n    accessDelay: 0,\r\n    fps: 0,\r\n    resolution: 0\r\n  })\r\n\r\n  const analytics = useMemo(() => state, [state])\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      stream.getStats((stats) => {\r\n        const width = props.local\r\n          ? stats.videoSendResolutionWidth\r\n          : stats.videoReceiveResolutionWidth\r\n        const height = props.local\r\n          ? stats.videoSendResolutionHeight\r\n          : stats.videoReceiveResolutionHeight\r\n        const fps = props.local\r\n          ? stats.videoSendFrameRate\r\n          : stats.videoReceiveFrameRate\r\n        setState({\r\n          accessDelay: `${stats.accessDelay ? stats.accessDelay : 0}`,\r\n          resolution: `${width}x${height}`,\r\n          fps: `${fps || 0}`\r\n        })\r\n      })\r\n    }, 500)\r\n\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  }, [props.local, stream])\r\n\r\n  const lockPlay = React.useRef(false)\r\n\r\n  useEffect(() => {\r\n    if (!stream || stream.isPlaying()) return\r\n    lockPlay.current = true\r\n    stream.play(domId, { fit: 'cover' }, (errState) => {\r\n      if (errState && errState.status !== 'aborted') {\r\n        console.log('stream-player play failed ', domId)\r\n        changeAutoplay(true)\r\n      }\r\n      lockPlay.current = false\r\n    })\r\n    return () => {\r\n      if (stream.isPlaying()) {\r\n        stream.stop()\r\n      }\r\n    }\r\n  }, [stream, domId])\r\n\r\n  return (\r\n    <div\r\n      className={`stream-player ${autoplay ? 'autoplay' : ''}`}\r\n      id={domId}\r\n      onClick={handleClick}\r\n      onDoubleClick={handleDoubleClick}\r\n    >\r\n      {props.children}\r\n      {props.showProfile ? (\r\n        <div className={props.className}>\r\n          <span>SD-RTN delay: {analytics.accessDelay}ms</span>\r\n          <span>\r\n            Video: {analytics.fps}fps {analytics.resolution}\r\n          </span>\r\n        </div>\r\n      ) : null}\r\n      {props.showUid && uid ? (\r\n        <div className=\"stream-uid\">UID: {uid}</div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport clsx from 'clsx'\r\nimport { useGlobalState, useGlobalMutation } from '../utils/container'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport useRouter from '../utils/use-router'\r\nimport useStream from '../utils/use-stream'\r\nimport RTCClient from '../rtc-client'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport StreamPlayer from './meeting/stream-player'\r\n\r\nconst useStyles = makeStyles({\r\n  menu: {\r\n    height: '150px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  customBtn: {\r\n    width: '50px',\r\n    height: '50px',\r\n    marginLeft: '20px',\r\n    borderRadius: '26px',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\r\n    backgroundSize: '50px',\r\n    cursor: 'pointer'\r\n  },\r\n  leftAlign: {\r\n    display: 'flex',\r\n    flex: '1',\r\n    justifyContent: 'space-evenly'\r\n  },\r\n  rightAlign: {\r\n    display: 'flex',\r\n    flex: '1',\r\n    justifyContent: 'center'\r\n  },\r\n  menuContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    zIndex: '2'\r\n  }\r\n})\r\n\r\nconst MeetingPage = () => {\r\n  const classes = useStyles()\r\n\r\n  const routerCtx = useRouter()\r\n  const stateCtx = useGlobalState()\r\n  const mutationCtx = useGlobalMutation()\r\n  \r\n  const localClient = useMemo(() => {\r\n    const client = new RTCClient()\r\n    if (!client._created) {\r\n      client.createClient({ codec: stateCtx.codec, mode: stateCtx.mode })\r\n      client._created = true\r\n    }\r\n    return client\r\n  }, [stateCtx.codec, stateCtx.mode])\r\n\r\n  const [localStream, currentStream] = useStream(localClient)\r\n  const [muteVideo, setMuteVideo] = useState(stateCtx.muteVideo)\r\n  const [muteAudio, setMuteAudio] = useState(stateCtx.muteAudio)\r\n\r\n  const config = useMemo(() => {\r\n    return {\r\n      token: stateCtx.config.token,\r\n      channel: stateCtx.config.channelName,\r\n      microphoneId: stateCtx.config.microphoneId,\r\n      cameraId: stateCtx.config.cameraId,\r\n      resolution: stateCtx.config.resolution,\r\n      muteVideo: muteVideo,\r\n      muteAudio: muteAudio,\r\n      uid: stateCtx.uid,\r\n      host: stateCtx.config.host\r\n      // beauty: stateCtx.beauty\r\n    }\r\n  }, [stateCtx, muteVideo, muteAudio])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      localClient && localClient.leave(() => mutationCtx.clearAllStream())\r\n    }\r\n  }, [localClient])\r\n\r\n  const history = routerCtx.history\r\n\r\n  const params = new URLSearchParams(window.location.search)\r\n\r\n  useEffect(() => {\r\n    const roleParams = params.get('role')\r\n    if (!config.channel && roleParams !== 'audience') {\r\n      history.push('/')\r\n    }\r\n  }, [config.channel, history, params])\r\n\r\n  useEffect(() => {\r\n    if (\r\n      config.channel &&\r\n      localClient._created &&\r\n      localClient._joined === false\r\n    ) {\r\n      localClient\r\n        .join(config)\r\n        .then((uid) => {\r\n          if (config.host) {\r\n            localClient.publish()\r\n          }\r\n          mutationCtx.updateConfig({ uid })\r\n          mutationCtx.stopLoading()\r\n        })\r\n        .catch((err) => {\r\n          mutationCtx.toastError(`Media ${err.info}`)\r\n          routerCtx.history.push('/')\r\n        })\r\n    }\r\n  }, [localClient, mutationCtx, config, routerCtx])\r\n\r\n  const handleClick = (name) => {\r\n    return (evt) => {\r\n      evt.stopPropagation()\r\n      switch (name) {\r\n        case 'video': {\r\n          muteVideo\r\n            ? localStream.muteVideo()\r\n            : localStream.unmuteVideo()\r\n          setMuteVideo(!muteVideo)\r\n          break\r\n        }\r\n        case 'audio': {\r\n          muteAudio\r\n            ? localStream.muteAudio()\r\n            : localStream.unmuteAudio()\r\n          setMuteAudio(!muteAudio)\r\n          break\r\n        }\r\n        case 'screen': {\r\n          if (stateCtx.screen) {\r\n            localClient\r\n              .createRTCStream({\r\n                token: null,\r\n                channel: stateCtx.config.channelName,\r\n                microphoneId: stateCtx.config.microphoneId,\r\n                resolution: stateCtx.config.resolution,\r\n                muteVideo: muteVideo,\r\n                muteAudio: muteAudio\r\n                // beauty: stateCtx.beauty,\r\n              })\r\n              .then(() => {\r\n                localClient.publish()\r\n                mutationCtx.setScreen(false)\r\n              })\r\n              .catch((err) => {\r\n                console.log(err)\r\n                mutationCtx.toastError(`Media ${err.info}`)\r\n                routerCtx.history.push('/')\r\n              })\r\n          } else {\r\n            localClient\r\n              .createScreenSharingStream({\r\n                token: null,\r\n                channel: stateCtx.config.channelName,\r\n                microphoneId: stateCtx.config.microphoneId,\r\n                cameraId: stateCtx.config.cameraId,\r\n                resolution: stateCtx.config.resolution\r\n              })\r\n              .then(() => {\r\n                localClient.publish()\r\n                mutationCtx.setScreen(true)\r\n              })\r\n              .catch((err) => {\r\n                console.log(err)\r\n                mutationCtx.toastError(`Media ${err.info}`)\r\n              })\r\n          }\r\n          break\r\n        }\r\n        case 'profile': {\r\n          break\r\n        }\r\n        default:\r\n          throw new Error(`Unknown click handler, name: ${name}`)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDoubleClick = (stream) => {\r\n    mutationCtx.setCurrentStream(stream)\r\n  }\r\n\r\n  const otherStreams = useMemo(() => {\r\n    return stateCtx.streams.filter(\r\n      (it) => it.getId() !== currentStream.getId()\r\n    )\r\n  }, [stateCtx.streams, currentStream])\r\n\r\n  return (\r\n    <div className=\"meeting\">\r\n      <div className=\"current-view\">\r\n        <div className=\"nav\">\r\n          <div className=\"avatar-container\">\r\n            <div className=\"default-avatar\"></div>\r\n            <div className=\"avatar-text\">Agora Test</div>\r\n            <div className=\"like\"></div>\r\n          </div>\r\n          <Tooltip title=\"quit\">\r\n            <div\r\n              className=\"quit\"\r\n              onClick={() => {\r\n                localClient.leave().then(() => {\r\n                  mutationCtx.clearAllStream()\r\n                  // mutationCtx.resetState()\r\n                  routerCtx.history.push('/')\r\n                })\r\n              }}\r\n            ></div>\r\n          </Tooltip>\r\n        </div>\r\n        {currentStream ? (\r\n          <StreamPlayer\r\n            className={'main-stream-profile'}\r\n            showProfile={stateCtx.profile}\r\n            local={\r\n              config.host\r\n                ? currentStream &&\r\n                  localStream &&\r\n                  currentStream.getId() === localStream.getId()\r\n                : false\r\n            }\r\n            stream={currentStream}\r\n            onDoubleClick={handleDoubleClick}\r\n            uid={currentStream.getId()}\r\n            domId={`stream-player-${currentStream.getId()}`}\r\n          >\r\n            <div className={classes.menuContainer}>\r\n              {config.host && (\r\n                <div className={classes.menu}>\r\n                  <Tooltip title={muteVideo ? 'mute-video' : 'unmute-video'}>\r\n                    <i\r\n                      onClick={handleClick('video')}\r\n                      className={clsx(\r\n                        classes.customBtn,\r\n                        muteVideo ? 'mute-video' : 'unmute-video'\r\n                      )}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip title={muteAudio ? 'mute-audio' : 'unmute-audio'}>\r\n                    <i\r\n                      onClick={handleClick('audio')}\r\n                      className={clsx(\r\n                        classes.customBtn,\r\n                        muteAudio ? 'mute-audio' : 'unmute-audio'\r\n                      )}\r\n                    />\r\n                  </Tooltip>\r\n                  <Tooltip title={stateCtx.screen ? 'stop-screen-share' : 'start-screen-share'}>\r\n                    <i\r\n                      onClick={handleClick('screen')}\r\n                      className={clsx(\r\n                        classes.customBtn,\r\n                        stateCtx.screen\r\n                          ? 'start-screen-share'\r\n                          : 'stop-screen-share'\r\n                      )}\r\n                    />\r\n                  </Tooltip>\r\n                  \r\n                  {/* <i onClick={handleClick('profile')} className={clsx(classes.customBtn, 'show-profile')}/> */}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </StreamPlayer>\r\n        ) : null}\r\n        <div className=\"stream-container\">\r\n          {stateCtx.otherStreams.map((stream, index) => (\r\n            <StreamPlayer\r\n              className={'stream-profile'}\r\n              showProfile={stateCtx.profile}\r\n              local={\r\n                config.host\r\n                  ? stream.getId() === localStream && localStream.getId()\r\n                  : false\r\n              }\r\n              key={`${index}${stream.getId()}`}\r\n              stream={stream}\r\n              isPlaying={stream.isPlaying()}\r\n              uid={stream.getId()}\r\n              domId={`stream-player-${stream.getId()}`}\r\n              onDoubleClick={handleDoubleClick}\r\n              showUid={true}\r\n            ></StreamPlayer>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(MeetingPage)\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport { useGlobalState, useGlobalMutation } from './container'\r\n\r\nexport default function useStream (client) {\r\n  const stateCtx = useGlobalState()\r\n  const mutationCtx = useGlobalMutation()\r\n\r\n  const [localStream, currentStream] = [\r\n    stateCtx.localStream,\r\n    stateCtx.currentStream\r\n  ]\r\n\r\n  const otherStreams = useMemo(\r\n    () =>\r\n      stateCtx.streams.filter(\r\n        (stream) => stream.getId() !== currentStream.getId()\r\n      ),\r\n    [stateCtx, currentStream]\r\n  )\r\n\r\n  // const streamList = stateCtx.streams.filter((it) => it.getId() !== currentStream.getId());\r\n\r\n  // const [streamList, localStream, currentStream] = useMemo(() => {\r\n  //   return [stateCtx.streams, stateCtx.localStream, stateCtx.currentStream];\r\n  // }, [stateCtx]);\r\n\r\n  useEffect(() => {\r\n    const addRemoteStream = (evt) => {\r\n      const { stream } = evt\r\n      client.subscribe(stream, (err) => {\r\n        mutationCtx.toastError(\r\n          `stream ${evt.stream.getId()} subscribe failed: ${err}`\r\n        )\r\n      })\r\n    }\r\n    // const canceledScreenSharing = () => {\r\n    //   if (stateCtx.localStream) {\r\n    //     stateCtx.localStream.close();\r\n    //   }\r\n    //   stateCtx.toastInfo('Screen Sharing Stopped');\r\n    // }\r\n    if (client && client._subscribed === false) {\r\n      // client.on(\"stopScreenSharing\", canceledScreenSharing);\r\n      client.on('connection-state-change', mutationCtx.connectionStateChanged)\r\n      client.on('localStream-added', mutationCtx.addLocal)\r\n      client.on('stream-published', mutationCtx.addStream)\r\n      client.on('stream-added', addRemoteStream)\r\n      client.on('stream-removed', mutationCtx.removeStream)\r\n      // client.on(\"stream-subscribed\", mutationCtx.addStream);\r\n      client.on('peer-leave', mutationCtx.removeStreamById)\r\n      client.on('stream-subscribed', (evt) => {\r\n        client.setStreamFallbackOption(evt.stream, 2)\r\n        mutationCtx.addStream(evt)\r\n      })\r\n      client._subscribed = true\r\n    }\r\n  }, [client, mutationCtx])\r\n\r\n  useEffect(() => {\r\n    if (client && client._subscribed === true && currentStream != null) {\r\n      client.setRemoteVideoStreamType(currentStream, 0)\r\n      otherStreams.forEach((otherStream) => {\r\n        client.setRemoteVideoStreamType(otherStream, 1)\r\n      })\r\n    }\r\n  }, [client, currentStream, otherStreams])\r\n\r\n  return [localStream, currentStream, otherStreams]\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Index from './pages/index'\r\nimport Meeting from './pages/meeting'\r\nimport { BrowserRouterHook } from './utils/use-router'\r\nfunction App () {\r\n  return (\r\n    <BrowserRouterHook>\r\n      <Switch>\r\n        <Route exact path=\"/meeting/:name\" component={Meeting}></Route>\r\n        <Route path=\"/\" component={Index}></Route>\r\n      </Switch>\r\n    </BrowserRouterHook>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nexport default createMuiTheme({\r\n  typography: {\r\n    fontFamily:\r\n      '-apple-system, BlinkMacSystemFont, \\\\\"Segoe UI\\\\\", \\\\\"Roboto\\\\\", \\\\\"Oxygen\\\\\", \\\\\"Ubuntu\\\\\", \\\\\"Cantarell\\\\\", \\\\\"Fira Sans\\\\\", \\\\\"Droid Sans\\\\\", \\\\\"Helvetica Neue\\\\\", sans-serif',\r\n    fontSize: 14,\r\n    fontWeightLight: 300,\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n    color: '#333'\r\n  },\r\n\r\n  overrides: {\r\n    // MuiSnackbar: {\r\n    //   root: {\r\n    //     top: '100px',\r\n    //     position: 'absolute'\r\n    //   }\r\n    // },\r\n    MuiFormControl: {\r\n      root: {\r\n        margin: '0.3rem 0'\r\n      }\r\n    },\r\n    // MuiInputLabel: {\r\n    //   root: {\r\n    //     \"&$focused\": {\r\n    //       color: \"#44a2fc\"\r\n    //     }\r\n    //   },\r\n    // },\r\n    MuiInput: {\r\n      // root: {\r\n      //   '&$focused': {\r\n      //     color: \"#44a2fc\"\r\n      //   }\r\n      // },\r\n      underline: {\r\n        '&:before': {\r\n          borderBottom: '1px solid #EAEAEA'\r\n        },\r\n        '&:hover:not($disabled):not($focused):not($error):before': {\r\n          borderBottom: '2px solid #EAEAEA'\r\n        },\r\n        '&$focused': {\r\n          '&:after': {\r\n            borderBottom: '2px solid #44a2fc'\r\n          }\r\n        }\r\n        // root: {\r\n\r\n        // backgroundColor: '#44a2fc',\r\n        // borderBottom: '1px solid red'\r\n        // }\r\n      }\r\n    }\r\n  }\r\n})\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { ContainerProvider } from './utils/container'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport THEME from './utils/theme'\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={THEME}>\r\n    <ContainerProvider>\r\n      <App />\r\n    </ContainerProvider>\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}